hydra:
  run:
    dir: ${output_dir}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - seed=0
    - num_workers=1
    - port=29478
    - checkpoint_name=Null
    - learning_rate=2e-4
    - checkpoint_name=Null
    - trainer.keep_n_checkpoints=8
    - batch_size=16
    - experiment_name=hpx32_coupled-dlwp_olr
    - model=coupled_hpx_rec_unet
    - model/modules/blocks@model.encoder.conv_block=symmetric_conv_next_block
    - model/modules/blocks@model.decoder.conv_block=symmetric_conv_next_block
    - model.encoder.n_channels=[180,90,90]
    - model.decoder.n_channels=[90,90,180]
    - trainer.max_epochs=150
    - data=era5_hpx32_9var-coupled_6h_24h
    - trainer/lr_scheduler=cosine
    - trainer/criterion=hpx32_coupled-atmos-olr
    - +trainer.max_norm=0.25
    - data.module.drop_last=True
    - trainer/optimizer=adam
    - model.enable_healpixpad=True
  job:
    name: train
    chdir: null
    override_dirname: +trainer.max_norm=0.25,batch_size=16,checkpoint_name=Null,checkpoint_name=Null,data.module.drop_last=True,data=era5_hpx32_9var-coupled_6h_24h,experiment_name=hpx32_coupled-dlwp_olr,learning_rate=2e-4,model.decoder.n_channels=[90,90,180],model.enable_healpixpad=True,model.encoder.n_channels=[180,90,90],model/modules/blocks@model.decoder.conv_block=symmetric_conv_next_block,model/modules/blocks@model.encoder.conv_block=symmetric_conv_next_block,model=coupled_hpx_rec_unet,num_workers=1,port=29478,seed=0,trainer.keep_n_checkpoints=8,trainer.max_epochs=150,trainer/criterion=hpx32_coupled-atmos-olr,trainer/lr_scheduler=cosine,trainer/optimizer=adam
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.2.0
    version_base: '1.2'
    cwd: /home/disk/brume/bowenliu/git_clone/zephyr
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/disk/brume/bowenliu/git_clone/zephyr/training/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /home/disk/brume/bowenliu/git_clone/zephyr/outputs/hpx32_coupled-dlwp_olr
    choices:
      trainer: default
      trainer/lr_scheduler: cosine
      trainer/optimizer: adam
      trainer/criterion: hpx32_coupled-atmos-olr
      model: coupled_hpx_rec_unet
      model/modules/decoder@model.decoder: rec_unet_dec
      model/modules/blocks@model.decoder.output_layer: output_layer
      model/modules/blocks/activation@model.decoder.output_layer.activation: null
      model/modules/blocks@model.decoder.recurrent_block: conv_gru_block
      model/modules/blocks@model.decoder.up_sampling_block: transposed_conv_upsample
      model/modules/activations@model.decoder.up_sampling_block.activation: capped_gelu
      model/modules/blocks@model.decoder.conv_block: symmetric_conv_next_block
      model/modules/activations@model.decoder.conv_block.activation: capped_gelu
      model/modules/encoder@model.encoder: rec_unet_enc
      model/modules/blocks@model.encoder.recurrent_block: conv_gru_block
      model/modules/blocks@model.encoder.down_sampling_block: avg_pool
      model/modules/blocks@model.encoder.conv_block: symmetric_conv_next_block
      model/modules/activations@model.encoder.conv_block.activation: capped_gelu
      data: era5_hpx32_9var-coupled_6h_24h
      data/splits: 1983-2018
      data/scaling: hpx32
      data/module: atmos_ConstantCoupling
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: true
